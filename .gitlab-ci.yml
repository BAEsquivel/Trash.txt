image: portal-common-docker.art.rambler.ru/builder

stages:
  - setup
  - build

test:
  stage: setup
  cache: &cache
    key: "$CI_COMMIT_REF_NAME:node_modules"
    paths:
      - node_modules/
    policy: push
  tags:
    - docker
  except:
    - /^gh-pages$/
  script:
    - npm install
    - npm run eslint
    - npm run test

build_package:
  stage: build
  cache:
    <<: *cache
    policy: pull
  tags:
    - docker
  except:
    - /^gh-pages$/
  only:
    - tags
  when: manual
  script:
    - npm install
    - npm run build
    - cd build
    - echo "//registry.npmjs.org/:_authToken=$UI_BOT_NPM_AUTH_TOKEN" > ~/.npmrc
    - npm publish
    - curl -u${PROJECT_NPM_USER}:${PROJECT_NPM_AUTH_KEY} 'https://art.rambler.ru/api/npm/rambler-common/auth/rambler-common' > ~/.npmrc
    - node -e "var p=require('./package.json'); p.name='@rambler-common/rambler-ui'; p.publishConfig={registry:'https://art.rambler.ru/api/npm/rambler-common/'}; fs.writeFileSync('package.json', JSON.stringify(p, null, 2));"
    - npm publish

build_site:
  stage: build
  cache:
    <<: *cache
    policy: pull
  tags:
    - docker
  except:
    - /^gh-pages$/
    - tags
  when: manual
  script:
    - ./ci-git-push-prepare.sh gitlab.rambler.ru "${SSH_PRIVATE_KEY}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - npm install
    - npm run pages -- --versions "${CI_COMMIT_REF_NAME}" --include "{.gitignore,.gitlab-ci.yml}"

build_version_site:
  stage: build
  cache:
    <<: *cache
    policy: pull
  tags:
    - docker
  except:
    - /^gh-pages$/
  only:
    - tags
  when: manual
  script:
    - ./ci-git-push-prepare.sh gitlab.rambler.ru "${SSH_PRIVATE_KEY}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - npm install
    - npm run pages -- --versions "${CI_COMMIT_TAG}" --include "{.gitignore,.gitlab-ci.yml}"
    - ./ci-git-push-prepare.sh github.com "${UI_BOT_SSH_PRIVATE_KEY}"
    - git config --global user.email "${UI_BOT_EMAIL}"
    - git config --global user.name "${UI_BOT_NAME}"
    - git fetch origin
    - git checkout -b gh-pages origin/gh-pages
    - git remote -v | grep 'rds' 1> /dev/null || git remote add rds git@github.com:rambler-digital-solutions/rambler-ui.git
    - git pull rds gh-pages
    - git push rds gh-pages

mirror:
  stage: build
  tags:
    - docker
  only:
    - master
  when: manual
  script:
    - ./ci-git-push-prepare.sh github.com "${UI_BOT_SSH_PRIVATE_KEY}"
    - git config --global user.email "${UI_BOT_EMAIL}"
    - git config --global user.name "${UI_BOT_NAME}"
    - git remote -v | grep 'rds' 1> /dev/null || git remote add rds git@github.com:rambler-digital-solutions/rambler-ui.git
    - git pull rds master
    - git push rds master

pages:
  stage: setup
  tags:
    - docker
  only:
    - /^gh-pages$/
  script:
    - mkdir public
    - rsync -rv --exclude=.git --exclude=node_modules --exclude=public . ./public
  artifacts:
    untracked: false
    paths:
      - 'public'
