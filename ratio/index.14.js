(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{212:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.meta=void 0;var i=p(t(2)),o=t(528),r=p(t(529)),a=p(t(531)),s=p(t(530)),l=p(t(808)),m=p(t(807));function p(n){return n&&n.__esModule?n:{default:n}}var c=e.meta={title:"Spinner",toc:["Пример","Свойства  <Spinner />"]},d=i.default.createElement(a.default,{code:l.default}),u=i.default.createElement(s.default,{code:m.default});e.default=function(n){var e=n.components,t=function(n,e){var t={};for(var i in n)e.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i]);return t}(n,["components"]);return i.default.createElement(o.MDXTag,{name:"wrapper",Layout:(0,r.default)(c)(function(n){return n.children}),layoutProps:t,components:e},i.default.createElement(o.MDXTag,{name:"h3",components:e},"Пример"),d,i.default.createElement(o.MDXTag,{name:"h3",components:e},"Свойства ",i.default.createElement(o.MDXTag,{name:"inlineCode",components:e,parentName:"h3"},"<Spinner />")),u)}},807:function(n,e){n.exports="import React, {PureComponent} from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {injectSheet} from '../theme'\nimport {isolateMixin, middleMixin} from '../utils/mixins'\n\nconst getKeyframes = (delay = 0) => ({\n  [`${0 + delay}%`]: {\n    transform: 'scale(1) translate3d(0, 0, 0)'\n  },\n  [`${20 + delay}%`]: {\n    transform: 'scale(1) translate3d(0, 100%, 0)'\n  },\n  [`${80 + delay}%`]: {\n    transform: 'scale(1) translate3d(0, 0, 0)'\n  }\n})\n\n@injectSheet(\n  theme => ({\n    '@keyframes ruiAnimateDot1': getKeyframes(),\n    '@keyframes ruiAnimateDot2': getKeyframes(100 / (600 / 80)),\n    '@keyframes ruiAnimateDot3': getKeyframes(100 / (600 / 160)),\n    spinner: {\n      extend: [isolateMixin, middleMixin],\n      display: 'inline-block',\n      color: theme.spinner.color,\n      verticalAlign: 'middle',\n      pointerEvents: 'none',\n      fontSize: 5\n    },\n    position: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      textAlign: 'center'\n    },\n    dot: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: '1em',\n      width: '1em',\n      position: 'relative',\n      top: `-${2 / 5}em`,\n      borderRadius: '50%',\n      color: 'inherit!important',\n      background: 'currentColor',\n      transition: 'transform .6s ease-out',\n      transform: 'translate3d(0, 0, 0)',\n      animation: '.6s ease-out',\n      animationFillMode: 'forwards',\n      animationIterationCount: 'infinite',\n      '&:nth-child(1)': {\n        animationName: 'ruiAnimateDot1'\n      },\n      '&:nth-child(2)': {\n        animationName: 'ruiAnimateDot2',\n        margin: '0 1em'\n      },\n      '&:nth-child(3)': {\n        animationName: 'ruiAnimateDot3'\n      }\n    }\n  }),\n  {name: 'Spinner'}\n)\nexport default class Spinner extends PureComponent {\n  static propTypes = {\n    /**\n     * CSS-класс\n     */\n    className: PropTypes.string,\n    /**\n     * Inline-стили\n     */\n    style: PropTypes.object,\n    /**\n     * Цвет точек\n     */\n    color: PropTypes.string,\n    /**\n     * Размер точек\n     */\n    size: PropTypes.number,\n    /**\n     * Сделать строчным элементом\n     */\n    inline: PropTypes.bool\n  }\n\n  static defaultProps = {\n    inline: false\n  }\n\n  render() {\n    const {className, style, color, size, inline, classes} = this.props\n\n    const resultStyle = {\n      fontSize: size,\n      color,\n      ...style\n    }\n\n    const dot = <span className={classes.dot} />\n\n    return (\n      <span\n        style={resultStyle}\n        className={classnames(\n          className,\n          classes.spinner,\n          !inline && classes.position\n        )}>\n        {dot}\n        {dot}\n        {dot}\n      </span>\n    )\n  }\n}\n"},808:function(n,e){n.exports="import React from 'react'\nimport Spinner from 'rambler-ui/Spinner'\nimport {ApplyTheme} from 'rambler-ui/theme'\n\nexport default function SpinnerExample() {\n  return (\n    <div>\n      <ApplyTheme>\n        <div>\n          <h4>Default</h4>\n          <div style={{height: 200, position: 'relative'}}>\n            <Spinner />\n          </div>\n          <h4>inline: true, color: currentColor, size: 3</h4>\n          <div style={{marginTop: 20, position: 'relative', color: '#aaa'}}>\n            Что-то произойдет через 5 секунд{' '}\n            <Spinner inline={true} color=\"currentColor\" size={3} />\n          </div>\n        </div>\n      </ApplyTheme>\n    </div>\n  )\n}\n"}}]);