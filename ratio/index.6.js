(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{204:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.meta=void 0;var o=m(t(2)),r=t(528),p=m(t(529)),i=m(t(531)),a=m(t(530)),l=m(t(787)),s=m(t(786)),c=m(t(785));function m(n){return n&&n.__esModule?n:{default:n}}var y=e.meta={title:"Typography",toc:["Пример","Свойства  <Typography />","Свойства  <List />"]},d=o.default.createElement(i.default,{code:l.default}),u=o.default.createElement(a.default,{code:s.default}),g=o.default.createElement(a.default,{code:c.default});e.default=function(n){var e=n.components,t=function(n,e){var t={};for(var o in n)e.indexOf(o)>=0||Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o]);return t}(n,["components"]);return o.default.createElement(r.MDXTag,{name:"wrapper",Layout:(0,p.default)(y)(function(n){return n.children}),layoutProps:t,components:e},o.default.createElement(r.MDXTag,{name:"h3",components:e},"Пример"),d,o.default.createElement(r.MDXTag,{name:"h3",components:e},"Свойства ",o.default.createElement(r.MDXTag,{name:"inlineCode",components:e,parentName:"h3"},"<Typography />")),u,o.default.createElement(r.MDXTag,{name:"h3",components:e},"Свойства ",o.default.createElement(r.MDXTag,{name:"inlineCode",components:e,parentName:"h3"},"<List />")),g)}},785:function(n,e){n.exports="import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from './Typography'\n\nconst List = ({numbered, ...props}) => (\n  <Typography {...props} tagName={numbered ? 'ol' : 'ul'} type=\"list\" />\n)\n\nList.propTypes = {\n  /**\n   * Нумерованный список\n   */\n  numbered: PropTypes.bool\n}\n\nexport default List\n"},786:function(n,e){n.exports="import React, {PureComponent} from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport {injectSheet} from '../theme'\nimport {isolateMixin, ifMobile} from '../utils/mixins'\n\nconst getFontStyle = ({\n  fontWeight = 400,\n  lineHeight,\n  mobile, // eslint-disable-line no-unused-vars\n  ...style\n} = {}) => ({\n  ...style,\n  fontWeight,\n  lineHeight: lineHeight && lineHeight + 'px'\n})\n\n@injectSheet(\n  ({typography}) => ({\n    reset: isolateMixin,\n    h1: {\n      extend: getFontStyle(typography.h1),\n      margin: '15px 0',\n      ...ifMobile({\n        extend: getFontStyle(typography.h1.mobile)\n      })\n    },\n    h2: {\n      extend: getFontStyle(typography.h2),\n      margin: '20px 0',\n      ...ifMobile({\n        extend: getFontStyle(typography.h2.mobile)\n      })\n    },\n    h3: {\n      extend: getFontStyle(typography.h3),\n      margin: '20px 0',\n      ...ifMobile({\n        extend: getFontStyle(typography.h3.mobile)\n      })\n    },\n    text: {\n      extend: getFontStyle(typography.text),\n      margin: '20px 0',\n      ...ifMobile({\n        extend: getFontStyle(typography.text.mobile)\n      })\n    },\n    quote: {\n      extend: getFontStyle(typography.quote),\n      margin: '30px 0',\n      paddingLeft: 37,\n      borderLeft: `3px solid ${typography.quote.borderColor}`,\n      '& p': {\n        margin: 0\n      },\n      '& p + p': {\n        marginTop: 20\n      }\n    },\n    epigraph: {\n      extend: getFontStyle(typography.epigraph),\n      margin: '20px 0'\n    },\n    source: {\n      composes: '$uppercase',\n      extend: getFontStyle(typography.source)\n    },\n    timestamp: {\n      extend: getFontStyle(typography.timestamp)\n    },\n    description: {\n      extend: getFontStyle(typography.description),\n      margin: '20px 0 25px'\n    },\n    galleryDescription: {\n      extend: getFontStyle(typography.galleryDescription)\n    },\n    photoSource: {\n      extend: getFontStyle(typography.photoSource)\n    },\n    list: {\n      extend: getFontStyle(typography.text),\n      position: 'relative',\n      margin: '30px 0',\n      paddingLeft: 40,\n      listStyle: 'none',\n      '& li + li': {\n        marginTop: 15\n      },\n      '& li:before': {\n        position: 'absolute',\n        left: 0\n      },\n      'ul& li:before': {\n        content: '\"\"',\n        marginTop: 9,\n        width: 10,\n        height: 10,\n        borderRadius: '50%',\n        background: typography.list.bullet.color\n      },\n      'ol&': {\n        counterReset: 'order'\n      },\n      'ol& li:before': {\n        extend: getFontStyle(typography.list.number),\n        counterIncrement: 'order',\n        content: 'counter(order)\".\"',\n        color: typography.list.number.color\n      }\n    },\n    uppercase: {\n      textTransform: 'uppercase',\n      letterSpacing: 1.3 / 11 + 'em'\n    }\n  }),\n  {name: 'Typography'}\n)\nexport default class Typography extends PureComponent {\n  static propTypes = {\n    /**\n     * Тип элемента\n     */\n    type: PropTypes.oneOf([\n      'h1',\n      'h2',\n      'h3',\n      'text',\n      'quote',\n      'epigraph',\n      'source',\n      'timestamp',\n      'description',\n      'galleryDescription',\n      'photoSource',\n      'list'\n    ]),\n    /**\n     * Имя тега\n     */\n    tagName: PropTypes.string,\n    /**\n     * Содержимое элемента\n     */\n    children: PropTypes.node,\n    /**\n     * Заглавные буквы\n     */\n    uppercase: PropTypes.bool\n  }\n\n  static defaultProps = {\n    tagName: 'div'\n  }\n\n  render() {\n    const {\n      tagName,\n      className,\n      classes,\n      type,\n      uppercase,\n      children,\n      theme, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props\n\n    return React.createElement(\n      tagName,\n      {\n        className: classnames(\n          className,\n          classes.reset,\n          type && classes[type],\n          uppercase && classes.uppercase\n        ),\n        ...other\n      },\n      children\n    )\n  }\n}\n"},787:function(n,e){n.exports="import React, {Component} from 'react'\nimport {\n  H1,\n  H2,\n  H3,\n  Text,\n  Quote,\n  Epigraph,\n  Source,\n  Timestamp,\n  Description,\n  GalleryDescription,\n  PhotoSource,\n  List\n} from 'rambler-ui/Typography'\n\nexport default class TypographyExample extends Component {\n  render() {\n    return (\n      <div>\n        <H1>Heading level 1</H1>\n        <H2>Heading level 2</H2>\n        <H3>Heading level 3</H3>\n        <Text>Text Text Text Text Text Text</Text>\n        <Quote>Quote Quote Quote</Quote>\n        <Quote>\n          <p>First paragraph</p>\n          <p>Second paragraph</p>\n        </Quote>\n        <Epigraph>Epigraph Epigraph Epigraph</Epigraph>\n        <Description>Description Description Description</Description>\n        <GalleryDescription>\n          GalleryDescription GalleryDescription GalleryDescription\n        </GalleryDescription>\n\n        <Source>Source Source Source</Source>\n        <br />\n        <Timestamp>Timestamp Timestamp Timestamp</Timestamp>\n        <br />\n        <PhotoSource>PhotoSource PhotoSource PhotoSource</PhotoSource>\n\n        <List>\n          <li>Unordered list</li>\n          <li>Unordered list</li>\n          <li>\n            Unordered\n            <br />\n            list\n          </li>\n        </List>\n        <List numbered={true}>\n          <li>Ordered list</li>\n          <li>Ordered list</li>\n          <li>\n            Ordered\n            <br />\n            list\n          </li>\n        </List>\n      </div>\n    )\n  }\n}\n"}}]);