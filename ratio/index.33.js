(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{235:function(n,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.meta=void 0;var o=c(r(2)),t=r(528),a=c(r(529)),i=c(r(531)),s=c(r(530)),l=c(r(859)),p=c(r(858));function c(n){return n&&n.__esModule?n:{default:n}}var d=e.meta={title:"Avatar",toc:["Пример","Свойства  <Avatar />"]},u=o.default.createElement(i.default,{code:l.default}),f=o.default.createElement(s.default,{code:p.default});e.default=function(n){var e=n.components,r=function(n,e){var r={};for(var o in n)e.indexOf(o)>=0||Object.prototype.hasOwnProperty.call(n,o)&&(r[o]=n[o]);return r}(n,["components"]);return o.default.createElement(t.MDXTag,{name:"wrapper",Layout:(0,a.default)(d)(function(n){return n.children}),layoutProps:r,components:e},o.default.createElement(t.MDXTag,{name:"h3",components:e},"Пример"),u,o.default.createElement(t.MDXTag,{name:"h3",components:e},"Свойства ",o.default.createElement(t.MDXTag,{name:"inlineCode",components:e,parentName:"h3"},"<Avatar />")),f)}},858:function(n,e){n.exports="import React, {PureComponent, cloneElement, isValidElement} from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport * as profileIcons from '../icons/profiles'\nimport {injectSheet} from '../theme'\nimport {isolateMixin, middleMixin} from '../utils/mixins'\n\nfunction calcProfileSize(size) {\n  return Math.min(Math.max(14, 0.45 * size), 32)\n}\n\n@injectSheet(\n  () => ({\n    avatar: {\n      extend: isolateMixin,\n      position: 'relative',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      boxShadow: 'inset 0 0 0 1px rgba(0, 0, 0, .15)'\n    },\n    circle: {\n      borderRadius: '50%',\n      '& $profile': {\n        transform: 'translate(10%, 10%)'\n      }\n    },\n    rounded: {\n      borderRadius: '7%'\n    },\n    profile: {\n      extend: middleMixin,\n      position: 'absolute',\n      right: 0,\n      bottom: 0,\n      transform: 'translate(25%, 25%)',\n      boxShadow: 'inset 0 0 0 1px white',\n      borderRadius: '100%',\n      fontSize: 0,\n      textAlign: 'center'\n    }\n  }),\n  {name: 'Avatar'}\n)\nexport default class Avatar extends PureComponent {\n  static propTypes = {\n    /**\n     * CSS-класс аватарки\n     */\n    className: PropTypes.string,\n    /**\n     * Inline-стили\n     */\n    style: PropTypes.object,\n    /**\n     * Цвет фона\n     */\n    backgroundColor: PropTypes.string,\n    /**\n     * Цвет фона иконки\n     */\n    iconBackgroundColor: PropTypes.string,\n    /**\n     * URL картинки\n     */\n    src: PropTypes.string.isRequired,\n    /**\n     * Размер аватарки\n     */\n    size: PropTypes.number,\n    /**\n     * Форма аватарки\n     */\n    shape: PropTypes.oneOf(['circle', 'square', 'rounded']),\n    /**\n     * Тип профиля для отображения иконки\n     */\n    profileType: PropTypes.oneOf([\n      'facebook',\n      'championat',\n      'google',\n      'instagram',\n      'livejournal',\n      'mailru',\n      'odnoklassniki',\n      'pgumosru',\n      'rambler',\n      'twitter',\n      'vkontakte'\n    ]),\n    /**\n     * Если указан, аватар будет ссылкой\n     */\n    href: PropTypes.string,\n    /**\n     * Элемент, который содержит контент, например `<Link />` в случае с `react-router`\n     */\n    container: PropTypes.element\n  }\n\n  static defaultProps = {\n    size: 45,\n    shape: 'circle'\n  }\n\n  getContainer() {\n    const {href, container} = this.props\n\n    if (isValidElement(container)) return container\n\n    if (href) return <a href={href} />\n\n    return <div />\n  }\n\n  render() {\n    const {\n      className,\n      style,\n      backgroundColor,\n      iconBackgroundColor,\n      src,\n      size,\n      shape,\n      profileType,\n      theme,\n      classes,\n      href, // eslint-disable-line no-unused-vars\n      container, // eslint-disable-line no-unused-vars\n      ...other\n    } = this.props\n\n    const styles = Object.assign({}, style, {\n      backgroundColor,\n      width: size,\n      height: size,\n      backgroundImage: `url(${src})`\n    })\n\n    const ProfileIcon =\n      profileType &&\n      profileIcons[`${profileType.replace(/^\\w/, m => m.toUpperCase())}Icon`]\n\n    const profileSize = Math.round(calcProfileSize(size))\n    const profileSizePx = profileSize + 'px'\n    const children = ProfileIcon && (\n      <div\n        className={classes.profile}\n        style={{\n          backgroundColor:\n            iconBackgroundColor || theme.avatar.colors.iconBackground,\n          width: profileSizePx,\n          height: profileSizePx\n        }}>\n        <ProfileIcon size={Math.round(profileSize * 0.55)} />\n      </div>\n    )\n\n    return cloneElement(\n      this.getContainer(),\n      {\n        ...other,\n        style: styles,\n        className: classnames(classes.avatar, classes[shape], className)\n      },\n      children\n    )\n  }\n}\n"},859:function(n,e){n.exports='import React from \'react\'\nimport Avatar from \'rambler-ui/Avatar\'\n\nexport default function AvatarExample() {\n  const props = {\n    style: {\n      marginLeft: 10\n    },\n    src: \'//api.adorable.io/avatars/face/eyes4/nose5/mouth7/8e8895/\'\n  }\n\n  return (\n    <div>\n      <div>\n        <div style={{display: \'inline-block\', width: \'33%\'}}>\n          Circle\n          <Avatar {...props} profileType="facebook" />\n          <Avatar {...props} size={36} profileType="facebook" />\n          <Avatar {...props} size={100} href="#/components/Button" />\n        </div>\n\n        <div style={{display: \'inline-block\', width: \'33%\'}}>\n          Rounded\n          <Avatar {...props} shape="rounded" profileType="facebook" />\n          <Avatar {...props} shape="rounded" size={25} profileType="facebook" />\n          <Avatar\n            {...props}\n            shape="rounded"\n            size={100}\n            profileType="instagram"\n            iconBackgroundColor="#f3f4f7"\n            container={<a href="#/components/Button" />}\n          />\n        </div>\n\n        <div style={{display: \'inline-block\', width: \'33%\'}}>\n          Square\n          <Avatar {...props} shape="square" profileType="livejournal" />\n          <Avatar {...props} shape="square" size={25} />\n          <Avatar {...props} shape="square" size={100} />\n        </div>\n      </div>\n    </div>\n  )\n}\n'}}]);