(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{207:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.meta=void 0;var a=i(t(2)),r=t(528),o=i(t(529)),p=i(t(531)),s=i(t(530)),l=i(t(794)),u=i(t(793));function i(e){return e&&e.__esModule?e:{default:e}}var m=n.meta={title:"Textarea",toc:["Пример","Свойства  <Textarea />"]},c=a.default.createElement(p.default,{code:l.default}),d=a.default.createElement(s.default,{code:u.default});n.default=function(e){var n=e.components,t=function(e,n){var t={};for(var a in e)n.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}(e,["components"]);return a.default.createElement(r.MDXTag,{name:"wrapper",Layout:(0,o.default)(m)(function(e){return e.children}),layoutProps:t,components:n},a.default.createElement(r.MDXTag,{name:"h3",components:n},"Пример"),c,a.default.createElement(r.MDXTag,{name:"h3",components:n},"Свойства ",a.default.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"h3"},"<Textarea />")),d)}},793:function(e,n){e.exports="/**\n * Компонент Textarea\n */\nimport React, {PureComponent} from 'react'\nimport PropTypes from 'prop-types'\nimport Input from '../Input'\n\nexport default class Textarea extends PureComponent {\n  static propTypes = {\n    /**\n     *  Значение поля\n     */\n    value: PropTypes.any.isRequired,\n    /**\n     *  Значение placeholder\n     */\n    placeholder: PropTypes.string,\n    /**\n     * Отключаем элемент\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Имя элемента\n     */\n    name: PropTypes.string,\n    /**\n     * Задает нижнюю границу определенного цвета, например, для обозначения статуса валидации\n     */\n    status: PropTypes.oneOf(['error', 'warning', 'success', null]),\n    /**\n     * Разновидность textarea\n     */\n    variation: PropTypes.oneOf(['regular', 'awesome', 'promo']),\n    /**\n     * Класс контейнера\n     */\n    className: PropTypes.string,\n    /**\n     * Стили для контейнера\n     */\n    style: PropTypes.object,\n    /**\n     * Класс для textarea\n     */\n    textareaClassName: PropTypes.string,\n    /**\n     * Стили для textarea\n     */\n    textareaStyle: PropTypes.object,\n    /**\n     * Обработик изменения значения поля, возвращает event и текущее value\n     */\n    onChange: PropTypes.func.isRequired,\n    /**\n     * Обработчик потери фокуса\n     */\n    onBlur: PropTypes.func,\n    /**\n     * Обработчик фокуса\n     */\n    onFocus: PropTypes.func,\n    /**\n     * Обрабочик отжатия клавиши\n     */\n    onKeyUp: PropTypes.func,\n    /**\n     * Обработчик нажания клавиши\n     */\n    onKeyDown: PropTypes.func\n  }\n\n  static defaultProps = {\n    variation: 'awesome'\n  }\n\n  render() {\n    const {textareaStyle, textareaClassName, ...other} = this.props\n    return (\n      <Input\n        inputStyle={textareaStyle}\n        inputClassName={textareaClassName}\n        tag=\"textarea\"\n        {...other}\n      />\n    )\n  }\n}\n"},794:function(e,n){e.exports="import React, {Component} from 'react'\nimport Textarea from 'rambler-ui/Textarea'\nimport FormGroup from 'rambler-ui/FormGroup'\nimport InputStatus from 'rambler-ui/InputStatus'\nimport {ApplyTheme} from 'rambler-ui/theme'\n\nexport default class TextareaExample extends Component {\n  state = {\n    value: ''\n  }\n\n  onChange = (event, value) => {\n    this.setState({\n      value\n    })\n  }\n\n  render() {\n    return (\n      <ApplyTheme>\n        <div>\n          <FormGroup inline={true} label=\"Имя\">\n            <Textarea\n              variation=\"regular\"\n              value={this.state.value}\n              onChange={this.onChange}\n              placeholder=\"Имя\"\n              style={{width: '500px'}}\n              textareaStyle={{minHeight: '100px'}}\n            />\n          </FormGroup>\n\n          <FormGroup inline={true} label=\"With error status\">\n            <InputStatus type=\"error\" message=\"Some error\">\n              <Textarea\n                status=\"error\"\n                size=\"small\"\n                value={this.state.value}\n                onChange={this.onChange}\n                style={{width: '500px'}}\n                placeholder=\"Отчество\"\n              />\n            </InputStatus>\n          </FormGroup>\n\n          <FormGroup inline={true} label=\"Disabled\">\n            <Textarea\n              value={this.state.value}\n              onChange={this.onChange}\n              style={{width: '500px'}}\n              disabled\n            />\n          </FormGroup>\n        </div>\n      </ApplyTheme>\n    )\n  }\n}\n"}}]);